// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.2-esm/index.mjs";import{factory as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.2.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.3.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";function f(){var f,j,u,g;if(0===arguments.length)j=m();else if(1===arguments.length&&s(arguments[0]))if(o(f=arguments[0],"prng")){if(!i(f.prng))throw new TypeError(h("0nt6u","prng",f.prng));j=f.prng}else j=m(f);else{if(!r(g=arguments[0]))throw new TypeError(h("0nt6y",g));if(arguments.length>1){if(!s(f=arguments[1]))throw new TypeError(h("0nt2V",f));if(o(f,"prng")){if(!i(f.prng))throw new TypeError(h("0nt6u","prng",f.prng));j=f.prng}else j=m(f)}else j=m()}return t(u=void 0===g?function(t){if(p(t)||t<0||t>1)return NaN;return j()<=t?1:0}:function(){return j()<=g?1:0},"NAME","bernoulli"),f&&f.prng?(t(u,"seed",null),t(u,"seedLength",null),n(u,"state",d(null),l),t(u,"stateLength",null),t(u,"byteLength",null),t(u,"toJSON",d(null)),t(u,"PRNG",j)):(e(u,"seed",(function(){return j.seed})),e(u,"seedLength",(function(){return j.seedLength})),n(u,"state",(function(){return j.state}),(function(t){j.state=t})),e(u,"stateLength",(function(){return j.stateLength})),e(u,"byteLength",(function(){return j.byteLength})),t(u,"toJSON",(function(){var t={type:"PRNG"};t.name=u.NAME,t.state=a(j.state),t.params=void 0===g?[]:[g];return t})),t(u,"PRNG",j),j=j.normalized),u}var j=f();t(j,"factory",f);export{j as default,f as factory};
//# sourceMappingURL=index.mjs.map
